---
- name: Ensure replication user exists on master.
  mysql_user:
    name: "{{ mysql_replication_user.name }}"
    host: "{{ mysql_replication_user.host | default('%') }}"
    password: "{{ mysql_replication_user.password }}"
    priv: "{{ mysql_replication_user.priv | default('*.*:REPLICATION SLAVE,REPLICATION CLIENT') }}"
    login_user: '{{ mysql_root_username }}'
    login_password: '{{ mysql_root_password }}'
    login_unix_socket: '{{ mysql_socket }}'
    state: present
  when:
    - mysql_replication_role == 'master'
    - mysql_replication_user.name is defined
    - (mysql_replication_master | length) > 0
  tags: ['skip_ansible_galaxy']

- name: Check slave replication status.
  mysql_replication:
    mode: getreplica
    login_user: "{{ mysql_replication_user.name }}"
    login_password: "{{ mysql_replication_user.password }}"
    login_port: "{{ mysql_port | default('3306') }}"
    #login_host: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
    login_host: "{{ mysql_replication_master['ansible_default_ipv4']['address'] }}"
  ignore_errors: true
  register: slave
  when:
    - mysql_replication_role == 'slave'
    - (mysql_replication_master | length) > 0
  tags: ['skip_ansible_galaxy']

- name: Check master replication status.
  mysql_replication:
    mode: getprimary
    login_user: '{{ mysql_root_username }}'
    login_password: '{{ mysql_root_password  }}'
    login_unix_socket: '{{ mysql_socket }}'
  delegate_to: "{{ mysql_replication_master['ansible_default_ipv4']['address'] }}"
  register: master
  when:
    - (slave.Is_Replica is defined and not slave.Is_Replica) or (slave.Is_Replica is not defined and slave is failed)
    - mysql_replication_role == 'slave'
    - (mysql_replication_master | length) > 0
  tags: ['skip_ansible_galaxy']

- name: Configure replication on the slave.
  mysql_replication:
    mode: changeprimary
    login_user: '{{ mysql_root_username }}'
    login_password: '{{ mysql_root_password }}'
    login_unix_socket: '{{ mysql_socket }}'
    primary_host: "{{ mysql_replication_master['ansible_default_ipv4']['address'] }}"
    primary_port: "{{ mysql_port | default('3306') }}"
    primary_user: "{{ mysql_replication_user.name }}"
    primary_password: "{{ mysql_replication_user.password }}"
    primary_log_file: "{{ master.File }}"
    primary_log_pos: "{{ master.Position }}"
  ignore_errors: true
  when:
    - (slave.Is_Replica is defined and not slave.Is_Replica) or (slave.Is_Replica is not defined and slave is failed)
    - mysql_replication_role == 'slave'
    - mysql_replication_user.name is defined
    - (mysql_replication_master | length) > 0

- name: Start replication.
  mysql_replication:
    mode: startreplica
    login_user: '{{ mysql_root_username }}'
    login_password: '{{ mysql_root_password }}'
    login_unix_socket: '{{ mysql_socket }}'
  when:
    - (slave.Is_Replica is defined and not slave.Is_Replica) or (slave.Is_Replica is not defined and slave is failed)
    - mysql_replication_role == 'slave'
    - (mysql_replication_master | length) > 0
  tags: ['skip_ansible_galaxy']





