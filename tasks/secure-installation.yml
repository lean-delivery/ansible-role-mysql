---
- name: Ensure default user is present.
  mysql_user:
    name: "{{ mysql_user_name }}"
    host: 'localhost'
    password: "{{ mysql_user_password }}"
    priv: '*.*:ALL,GRANT'
    state: present
  when: mysql_user_name  != "root"

- name: Copy .my.cnf file with password credentials.
  become: True
  template:
    src: "user-my.cnf.j2"
    dest: "{{ mysql_user_home }}/.my.cnf"
    owner: "{{ mysql_user_name }}"
    mode: 0600
  when: mysql_user_name != mysql_root_username

- name: log file
  become: True
  slurp:
    src: "/var/log/mysqld.log"
  register: log_content

- name: find temporary password
  debug:
    msg: "{{ log_content['content'] | b64decode |\
         regex_search('.*root@localhost:\\ (\\S+)') |\
         regex_replace('.*root@localhost:\\ (\\S+)', '\\1') }}"
  register: mysql_root_temporary_password

- name: update mysql root password for root@localhost account (5.7.x)
  become: True
  shell: mysql -u root -p'{{ mysql_root_temporary_password.msg }}' --connect-expired-password \
        -e "ALTER USER '{{ mysql_root_username }}'@'localhost' \
        IDENTIFIED BY '{{ mysql_root_password }}';\
         FLUSH PRIVILEGES;"
  args:
    creates: /tmp/temporary_password_changed.txt
  when: ( '5.7.' in mysql_cli_version.stdout )
  notify: result root password change

- name: update mysql root password for all root accounts
  become: True
  mysql_user:
    name: root
    host_all: True
    password: '{{ mysql_root_password }}'
    check_implicit_admin: True
    priv: "*.*:ALL,GRANT"
    login_user: root
    login_password: "{{ mysql_root_password }}"
  no_log: True

# Has to be after the password assignment, for idempotency.
- name: Copy .my.cnf file with password credentials.
  become: True
  template:
    src: "root-my.cnf.j2"
    dest: "{{ mysql_root_home }}/.my.cnf"
    owner: "{{ mysql_root_username }}"
    mode: 0600

- name: Remove anonymous MySQL users.
  mysql_user:
    name: ""
    host_all: True
    state: absent
    login_user: "{{ mysql_root_username }}"
    login_password: "{{ mysql_root_password }}"

- name: Remove MySQL test database.
  mysql_db:
    name: test
    state: absent
    login_user: "{{ mysql_root_username }}"
    login_password: "{{ mysql_root_password }}"
