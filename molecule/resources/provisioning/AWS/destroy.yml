---
- name: Destroy
  hosts: localhost
  connection: local
  gather_facts: False
  no_log: False #"{{ (not lookup('env', 'MOLECULE_DEBUG') | bool) or (molecule_yml.provisioner.log | default(False) | bool) }}"
  vars:
    keypair_name: "molecule_key-\
      {{ lookup('env','MOLECULE_SCENARIO_DIRECTORY').split('/')[-1] }}\
      -{{ lookup('env','MOLECULE_SCENARIO_NAME') }}"
  tasks:

    - name: Delete remote keypair
      ec2_key:
        name: "{{ keypair_name }}-{{ item.name }}"
        state: absent
      loop: "{{ molecule_yml.platforms }}"

    - name: Get instances list
      ec2_instance_facts:
        filters:
          "tag:instance": "{{ molecule_yml.platforms | map(attribute='name') | list }}"
        region: us-east-1
      register: ec2_sets

    - name: Destroy molecule instance(s)
      ec2:
        state: absent
        region: us-east-1
        instance_ids: "{{ ec2_sets.instances | map(attribute='instance_id') | list }}"
        wait: True
      register: server
      when: ( ec2_sets.instances | map(attribute='instance_id') | list | length )
      # async: 7200
      # poll: 0

    # - name: Wait for instance(s) deletion to complete
    #   async_status:
    #     jid: "{{ server.ansible_job_id }}"
    #   register: ec2_jobs
    #   until: ec2_jobs.finished
    #   retries: 300
    #   delay: 20
    #   loop: "{{ server.results }}"

    # Mandatory configuration for Molecule to function.

    - name: Populate instance config
      set_fact:
        instance_conf: {}

    - name: Dump instance config
      copy:
        content: "{{ instance_conf | to_json | from_json | molecule_to_yaml | molecule_header }}"
        dest: "{{ molecule_instance_config }}"
      when: server.changed | bool
